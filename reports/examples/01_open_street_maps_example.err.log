Traceback (most recent call last):
  File "/usr/share/miniconda/envs/test/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/share/miniconda/envs/test/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/envs/test/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/share/miniconda/envs/test/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/share/miniconda/envs/test/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/usr/share/miniconda/envs/test/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/envs/test/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/envs/test/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------

generate_compass_dataset(g, output_directory="denver_co")



------------------

----- stderr -----
INFO:nrel.routee.compass.io.generate_dataset:running pipeline import with phases: [['GRAPH', 'GRADE', 'CONFIG', 'POWERTRAIN', 'CHARGING_STATIONS']]
----- stderr -----
INFO:nrel.routee.compass.io.generate_dataset:processing graph topology and speeds
----- stderr -----
INFO:nrel.routee.compass.io.generate_dataset:adding grade information
----- stderr -----
INFO:nrel.routee.compass.io.utils:downloading n40w106
----- stderr -----
INFO:nrel.routee.compass.io.utils:downloading n40w105
----- stderr -----
INFO:nrel.routee.compass.io.generate_dataset:processing vertices
----- stderr -----
INFO:nrel.routee.compass.io.generate_dataset:processing edges
----- stderr -----
INFO:nrel.routee.compass.io.generate_dataset:writing vertex files
----- stderr -----
INFO:nrel.routee.compass.io.generate_dataset:writing edge files
----- stderr -----
INFO:nrel.routee.compass.io.generate_dataset:writing edge attribute files
----- stderr -----
INFO:nrel.routee.compass.io.generate_dataset:copying default configuration TOML files
----- stderr -----
INFO:nrel.routee.compass.io.generate_dataset:downloading the default RouteE Powertrain models
----- stderr -----
INFO:nrel.routee.compass.io.generate_dataset:Downloading EV charging stations for the road network bounding box.
------------------

[31m---------------------------------------------------------------------------[39m
[31mTypeError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[3][39m[32m, line 1[39m
[32m----> [39m[32m1[39m [43mgenerate_compass_dataset[49m[43m([49m[43mg[49m[43m,[49m[43m [49m[43moutput_directory[49m[43m=[49m[33;43m"[39;49m[33;43mdenver_co[39;49m[33;43m"[39;49m[43m)[49m

[36mFile [39m[32m/usr/share/miniconda/envs/test/lib/python3.11/site-packages/nrel/routee/compass/io/generate_dataset.py:271[39m, in [36mgenerate_compass_dataset[39m[34m(g, output_directory, hwy_speeds, fallback, agg, phases, raster_resolution_arc_seconds, default_config, requests_kwds, afdc_api_key)[39m
[32m    264[39m vertex_gdf = gpd.GeoDataFrame(
[32m    265[39m     v[[[33m"[39m[33mvertex_id[39m[33m"[39m, [33m"[39m[33mx[39m[33m"[39m, [33m"[39m[33my[39m[33m"[39m]].copy(),
[32m    266[39m     geometry=gpd.points_from_xy(v.x, v.y),
[32m    267[39m     crs=[33m"[39m[33mEPSG:4326[39m[33m"[39m,
[32m    268[39m )
[32m    270[39m vertex_bounds = vertex_gdf.total_bounds
[32m--> [39m[32m271[39m vertex_bbox = [43mbox[49m[43m([49m
[32m    272[39m [43m    [49m[43mxmin[49m[43m=[49m[43mvertex_bounds[49m[43m[[49m[32;43m0[39;49m[43m][49m[43m,[49m
[32m    273[39m [43m    [49m[43mymin[49m[43m=[49m[43mvertex_bounds[49m[43m[[49m[32;43m1[39;49m[43m][49m[43m,[49m
[32m    274[39m [43m    [49m[43mxmax[49m[43m=[49m[43mvertex_bounds[49m[43m[[49m[32;43m2[39;49m[43m][49m[43m,[49m
[32m    275[39m [43m    [49m[43mymax[49m[43m=[49m[43mvertex_bounds[49m[43m[[49m[32;43m3[39;49m[43m][49m[43m,[49m
[32m    276[39m [43m[49m[43m)[49m
[32m    278[39m charging_gdf = download_ev_charging_stations_for_polygon(
[32m    279[39m     vertex_bbox, api_key=afdc_api_key
[32m    280[39m )
[32m    282[39m [38;5;28;01mif[39;00m charging_gdf.empty:

[31mTypeError[39m: box() got an unexpected keyword argument 'xmin'

