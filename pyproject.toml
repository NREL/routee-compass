[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "nrel.routee.compass"
version = "0.15.0"
description = "An eco-routing tool build upon RouteE-Powertrain"
readme = "README.md"
requires-python = ">=3.10,<3.14"
authors = [{ name = "National Renewable Energy Laboratory" }]
license = { text = "BSD 3-Clause License Copyright (c) 2023, Alliance for Sustainable Energy, LLC" }
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering",
]
keywords = ["eco routing"]
dependencies = ["tomlkit>=0.11.0,<1.0"]

[project.optional-dependencies]
dev = [
    "pytest>=8.0,<9.0",
    "maturin>=1.0,<2.0",
    "jupyter-book>=1.0,<2.0",
    "ruff>=0.1.0,<1.0",
    "sphinx-book-theme>=1.0.0,<2.0",
    "mypy>=1.0.0,<2.0",
    "jupyterlab>=4.0.0,<5.0",
    "boxsdk>=3.0.0,<4.0",
    "types-requests>=2.28.0,<3.0",
]
osm = [
    "osmnx>=2.0.5,<3.0",
    "rio-vrt>=0.3.1,<1.0",
    "mapclassify>=2.8.1,<3.0",
    "requests>=2.28.0,<3.0",
    "geopandas>=1.1.1,<2.0",
    "shapely>=2.0.0,<3.0",
    "networkx>=3.0,<4.0",
    "folium>=0.14.0,<1.0",
    "pandas>=2.0.0,<3.0",
    "rasterio>=1.3.0,<2.0",
    "matplotlib>=3.7.0,<4.0",
    "numpy>=1.26,<3.0",
    "seaborn>=0.12.0,<1.0",
]
all = ["nrel.routee.compass[osm]", "nrel.routee.compass[dev]"]

[project.urls]
Homepage = "https://github.com/NREL/routee-compass"
Documentation = "https://nrel.github.io/routee-compass"

[tool.maturin]
python-source = "python"
features = ["pyo3/extension-module"]
module-name = "nrel.routee.compass.routee_compass_py"
manifest-path = "rust/routee-compass-py/Cargo.toml"
include = [
    "python/nrel/routee/compass/resources/models/*.bin",
    "python/nrel/routee/compass/resources/*.toml",
    "LICENSE.md",
    "README.md",
]
exclude = ["rust/routee-compass-powertrain/onnxruntime/**"]

[tool.mypy]
mypy_path = "python"
ignore_missing_imports = true
namespace_packages = true
explicit_package_bases = true
strict = true
disallow_untyped_calls = false
exclude = ["docs", "build/", "dist/"]

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64"]

[tool.pixi.dependencies]
rust = ">=1.90.0,<1.91"

[tool.pixi.feature.py310]
dependencies = { python = "3.10.*" }

[tool.pixi.feature.py311]
dependencies = { python = "3.11.*" }

[tool.pixi.feature.py312]
dependencies = { python = "3.12.*" }

[tool.pixi.feature.py313]
dependencies = { python = "3.13.*" }

[tool.pixi.pypi-dependencies]
nrel-routee-compass = { path = ".", editable = true }

[tool.pixi.environments]
default = { solve-group = "default" }
all = { features = ["all", "osm", "dev"], solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }
osm = { features = ["osm"], solve-group = "default" }
test-py310 = { features = ["py310", "all"], solve-group = "py310" }
test-py311 = { features = ["py311", "all"], solve-group = "py311" }
test-py312 = { features = ["py312", "all"], solve-group = "py312" }
test-py313 = { features = ["py313", "all"], solve-group = "py313" }

[tool.pixi.tasks]
fmt_fix = "ruff format"
fmt_check = "ruff format --check"
lint_check = "ruff check"
lint_fix = "ruff check --fix"
typing = "mypy ."
test = "pytest python/tests/"
check = { depends-on = ["fmt_fix", "lint_fix", "typing", "test"] }
